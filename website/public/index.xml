<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>wash: the wide-area shell on home</title><link>https://ekinanp.github.io/wash/</link><description>Recent content in wash: the wide-area shell on home</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© 2019 — the wash maintainers</copyright><lastBuildDate>Fri, 19 Apr 2019 22:59:26 -0600</lastBuildDate><atom:link href="https://ekinanp.github.io/wash/index.xml" rel="self" type="application/rss+xml"/><item><title>Introducing Wash</title><link>https://ekinanp.github.io/wash/posts/2019/08/introducing-wash/</link><pubDate>Mon, 19 Aug 2019 15:21:20 -0700</pubDate><guid>https://ekinanp.github.io/wash/posts/2019/08/introducing-wash/</guid><description>Have you ever had to:
List all your AWS EC2 instances or Kubernetes pods? Read/cat a GCP Compute instance&amp;rsquo;s console output, or an AWS S3 object&amp;rsquo;s content? Exec a command on a Kubernetes pod or GCP Compute Instance? Find all AWS EC2 instances with a particular tag, or Docker containers/Kubernetes pods/GCP Compute instances with a specific label? If so, then some parts of the following tables might look familiar to you.</description></item><item><title>Wash Tutorial</title><link>https://ekinanp.github.io/wash/tutorial/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ekinanp.github.io/wash/tutorial/</guid><description>This tutorial assumes you&amp;rsquo;ve installed Wash.
Setting up To give you a sense of how wash works, we&amp;rsquo;ve created a multi-node Docker application based on the Docker Compose tutorial. To start it run
1 2 svn export https://github.com/puppetlabs/wash.git/trunk/examples/swarm docker-compose -f swarm/docker-compose.yml up -d If you don&amp;rsquo;t have svn installed, you can git clone https://github.com/puppetlabs/wash.git and prefix swarm/docker-compose.yml with wash/examples.
This starts a small Flask webapp that keeps a count of how often it&amp;rsquo;s been accessed in a Redis instance that maintains state in a Docker volume.</description></item></channel></rss>